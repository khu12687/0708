<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	

	<jee:jndi-lookup id="dataSource"
		jndi-name="jdbc/oracle" resource-ref="true" />

	<!-- 트랜잭션 메니저를 선택해야 한다. 사용 기술이 Mybatis, JDBC : DataSourceTransactionManager 
		사용 기술이 Hibernate : HibernateTansactionManager -->
	<bean id="dataSourceTransactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		p:dataSource-ref="dataSource" />

	<!-- mybatis의 SqlSession 객체를 래핑한 SqlSessionTemplate을 이용해야 하는데, 이 객체는 SqlSessionFactoryBean으로 
		부터 얻을 수 있다 -->
	<bean id="sqlSessionFactoryBean"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation"
			value="classpath:com/study/mybatis/config.xml"></property>
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<bean id="sqlSessionTemplate"
		class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactoryBean"></constructor-arg>
	</bean>
	
	<!-- 모든 컨트롤러가 접근할 수 있는 공통로직 DAO,Service 객체등 -->
	<context:component-scan base-package="com.study">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
</beans>
